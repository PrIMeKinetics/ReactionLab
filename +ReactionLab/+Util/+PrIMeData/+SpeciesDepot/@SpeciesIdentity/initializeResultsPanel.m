function initializeResultsPanel(obj)
% initializeResultsPanel(SpeciesIdentityObj)
% set the panel for results of match|search

% Copyright 1999-2012 Michael Frenklach
% $Revision: 1.1 $
% Last modified: August 17, 2012

Hpanel = obj.Hpanel;
panelColor = get(Hpanel,'BackgroundColor');

Hresults.Hpanel = uipanel('Parent',Hpanel,...
   'Title','Searching PrIMe Data Warehouse',...
   'ForegroundColor', 'blue',...
   'BackgroundColor', 'white',...
   'units','normalized',...
   'Position', [0.025 0.1 0.925 0.38],...
   'Visible', 'off');
   
uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'HorizontalAlignment', 'left',...
   'Position', [5 120 130 20],...
   'FontSize', 10, ...
   'String','Matched by InChI');
Hresults.HfoundVal = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'ForegroundColor', 'blue',...
   'BackgroundColor', panelColor,...
   'HorizontalAlignment', 'right',...
   'Position', [130 120 30 20],...
   'FontSize', 10, ...
   'String','' );
Hresults.HfoundBtn = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'pushbutton',...
   'HorizontalAlignment', 'left',...
   'Position', [170 120 130 20],...
   'FontSize', 10, ...
   'String','Verify',...
   'Callback', @showFound );

uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'HorizontalAlignment', 'left',...
   'Position', [5 90 130 20],...
   'FontSize', 10, ...
   'String','Multiple hits by InChI');
Hresults.HmultipleVal = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'ForegroundColor', 'blue',...
   'BackgroundColor', panelColor,...
   'HorizontalAlignment', 'right',...
   'Position', [130 90 30 20],...
   'FontSize', 10, ...
   'String','' );
Hresults.HmultipleBtn = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'pushbutton',...
   'HorizontalAlignment', 'left',...
   'Position', [170 90 130 20],...
   'FontSize', 10, ...
   'String','Select among them',...
   'Callback', @showMulti );

uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'HorizontalAlignment', 'left',...
   'Position', [5 60 130 20],...
   'FontSize', 10, ...
   'String','Not found by InChI');
Hresults.HnotFoundVal = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'ForegroundColor', 'blue',...
   'BackgroundColor', panelColor,...
   'HorizontalAlignment', 'right',...
   'Position', [130 60 30 20],...
   'FontSize', 10, ...
   'String','' );
Hresults.HnotFoundBtn = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'pushbutton',...
   'HorizontalAlignment', 'left',...
   'Position', [169 60 131 20],...
   'FontSize', 10, ...
   'String','check by composition',...
   'Callback', @showComp );

uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'HorizontalAlignment', 'left',...
   'Position', [5 30 130 20],...
   'FontSize', 10, ...
   'String','Not in PrIMe');
Hresults.HsubmitVal = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'text',...
   'ForegroundColor', 'blue',...
   'BackgroundColor', panelColor,...
   'HorizontalAlignment', 'right',...
   'Position', [130 30 30 20],...
   'FontSize', 10, ...
   'String','' );
Hresults.HsubmitBtn = uicontrol('Parent',Hresults.Hpanel,...
   'Style', 'pushbutton',...
   'HorizontalAlignment', 'left',...
   'Position', [170 30 130 20],...
   'FontSize', 10, ...
   'String','Submit to PrIMe',...
   'Callback', @submit2prime );

% Hresults.HupdateDict = uicontrol('Parent',Hresults.Hpanel,...
%    'Style', 'pushbutton',...
%    'Position', [100 10 150 20],...
%    'FontSize', 10, ...
%    'String','Update Dictionaries',...
%    'Callback', @updateDict );

% Hresults.Hdisplay = @displayResults;
Hresults.dictInd  = [];    % index of current obj.SpeDict
Hresults.matched    = {};
Hresults.multiple   = {};
Hresults.notFound   = {};
Hresults.notInPrIMe = {};

obj.Hresults = Hresults;


   function updateDict(hh,dd)
      set(Hresults.Hpanel,'Title','Reaction Species');
   end

   function showFound(hh,dd)
      speIdGUI = ReactionLab.Util.PrIMeData.SpeciesDepot.SpeciesIdentityGUIverify(obj.Hresults.matched);
      waitfor(speIdGUI.Hfig);
      if speIdGUI.Completed
         updateRecords(speIdGUI,'matched');
      end
%       ReactionLab.SpeciesData.SpeciesGUI(...
%             ReactionLab.SpeciesData.SpeciesList.populateByPrimeId(ids) );
   end

   function showMulti(hh,dd)
      speIdGUI = ReactionLab.Util.PrIMeData.SpeciesDepot.SpeciesIdentityGUImulti(obj.Hresults.multiple);
      waitfor(speIdGUI.Hfig);
      if speIdGUI.Completed
         updateRecords(speIdGUI,'multiple');
      end
   end

   function updateRecords(speIdGUI,curDict)
   % this function is used with 'showFound' and 'showMulti'
   % it updates dictionaties based on the result of user action
%       [d,dd,ind] = obj.getMatchOut();
      if ~isempty(speIdGUI.Found2add)
         f2a = speIdGUI.Found2add;
         ff = [f2a{:,2}];
         d = [f2a(:,1) ff(1:2:end)'];
         obj.updateSpeDict('buildupDictionary',d,'primeId');
         obj.Hresults.(curDict) = ReactionLab.Util.cellDiff(obj.Hresults.(curDict),f2a);
      end
      if ~isempty(speIdGUI.NotFound2add)
         nf2a = speIdGUI.NotFound2add;
         obj.Hresults.(curDict) = ReactionLab.Util.cellDiff( obj.Hresults.(curDict),nf2a);
         obj.Hresults.notFound  = ReactionLab.Util.cellMerge(obj.Hresults.notFound, nf2a);
      end
      obj.displayResults();
   end

   function showComp(hh,dd)
      dOut = obj.comp2primeid(obj.Hresults.notFound);
      if ~dOut.completed, return, end
      obj.Hresults.notFound   = ReactionLab.Util.cellDiff( obj.Hresults.notFound,  dOut.notInWare);
      obj.Hresults.notFound   = ReactionLab.Util.cellMerge(obj.Hresults.notFound,  dOut.found);
      obj.Hresults.notInPrIMe = ReactionLab.Util.cellMerge(obj.Hresults.notInPrIMe,dOut.notInWare);
      if ~isempty(dOut.notInDict)
         obj.Hresults.notFound = ReactionLab.Util.cellDiff(obj.Hresults.notFound,dOut.notInDict);
         str = [{'species:'; ''}; dOut.notInDict(:,1); ...
                {' '; 'are not in composition/thermo dictionary'}];
         uiwait(errordlg(str,'not in dict','modal'));
      end
      obj.displayResults;
     % open species window
      if isempty(obj.Hresults.notFound), return, end
      speIdGUI = ReactionLab.Util.PrIMeData.SpeciesDepot.SpeciesIdentityGUIcomp(obj.Hresults.notFound);
      waitfor(speIdGUI.Hfig);
      if speIdGUI.Completed
         obj.Hresults.notFound = ReactionLab.Util.cellDiff( obj.Hresults.notFound,speIdGUI.Found2add);
         obj.Hresults.matched  = ReactionLab.Util.cellMerge(obj.Hresults.matched, speIdGUI.Found2add);
         obj.Hresults.notFound   = ReactionLab.Util.cellDiff( obj.Hresults.notFound,  speIdGUI.NotFound2add);
         obj.Hresults.notInPrIMe = ReactionLab.Util.cellMerge(obj.Hresults.notInPrIMe,speIdGUI.NotFound2add);
         obj.displayResults;
      end
   end

   function submit2prime(hh,dd)
      d = obj.Hresults.notInPrIMe;
      speSubmitGUI = ReactionLab.Util.PrIMeData.SpeciesDepot.SpeciesSubmit(obj);
      waitfor(speSubmitGUI.Hfig);
   end


   function localAction(hh,dd)
      data = get(obj.Table,'Data');
      ind = find([data{:,3}]);
      val = get(hh,'Value');
      str = get(hh,'String');
      option = str{val};
      if any(strcmp(option,{'Restore' 'New'}))
         ind = 0;
      end
      if ~isempty(ind)
         switch option
            case 'Action'
%             case 'View'
%                d = obj.SpeDict(ind(1));
%                ReactionLab.Util.displayCellArray(d.dict,d.fileName);
            case 'Remove'
               obj.SpeDictPrev = obj.SpeDict;
               obj.SpeDict(ind) = [];
               setCurrentData();
            case 'Merge'
               if length(ind) < 2, return, end
               [d,type] = obj.getDictByIndex(ind);
               if isempty(d)
                  errordlg('Selected directories are not of the same type','','modal')
                  return
               end
               answer = inputdlg('Enter the name for the merged dictionary',...
                                 'Species Dictionary',1,{'mergedDictionary'} );
               if ~isempty(answer)
                  obj.SpeDictPrev = obj.SpeDict;
                  obj.SpeDict(ind) = [];
                  obj.addSpeDict(answer,d,type);
                  setCurrentData();
               end
            case 'Restore'
               obj.SpeDict = obj.SpeDictPrev;
               setCurrentData();
            case 'Edit'
               if length(ind) ~= 1
                  errordlg('use single selection','','modal');
                  return
               end
               obj.editCellArray(ind);
            case 'Convert'
               if length(ind) ~= 1
                  errordlg('use single selection','','modal');
                  return
               end
               [d,type] = obj.getDictByIndex(ind);
               switch lower(type)
                  case 'primeid'
                     d = inchi2primeid(obj,d);
                     if ~isempty(d)
                        updateResults(d(end));
                     end
                  case 'inchi'
                     
                  otherwise
                     
               end
               
%             case 'Save'
%                d = obj.SpeDict(ind(1));
%                ReactionLab.Util.saveExcelFile(d.dict,d.fileName);
            otherwise
               error(['undefined option ' option]);
         end
         set(hh,'Value',1);
      end
      
   end


%    function done(hh,dd)
%       obj.setSpeciesList2id();
%       obj.identifySpecies;
%    end

end