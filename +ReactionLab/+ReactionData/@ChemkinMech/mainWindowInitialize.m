function mainWindowInitialize(obj)
% mainWindowInitialize(ChemkinMechObj)
% sets the main window for loading 
%   a chemkin file

% Copyright 1999-2012 Michael Frenklach
% $Revision: 1.1 $
% Last modified: Sept 5,2012 Matt - added "help"

Hfig = figure('Position',[50 200 850 490],...
   'NumberTitle', 'off',...
   'Name', 'Load Chemkin file',...
   'tag','chemkin file',...
   'MenuBar', 'none',...
   'Resize','off' );
obj.Hfig  = Hfig;

figColor = get(obj.Hfig,'Color');

HbottomPanel = uipanel('parent',Hfig,...
   'BackgroundColor', figColor,...
   'units','normalized',...
   'Position', [0 0 0.4 0.1]);
Hprev = uicontrol('Parent',HbottomPanel,...
   'Style', 'pushbutton',...
   'Position', [110 10 60 20],...
   'String', 'Prev',...
   'Enable', 'off', ...
   'Callback', {@switchPanel -1} );
Hnext = uicontrol('Parent',HbottomPanel,...
   'Style', 'pushbutton',...
   'Position', [170 10 60 20],...
   'String', 'Next',...
   'Enable', 'off', ...
   'Callback', {@switchPanel +1} );
obj.BottomPanel.panel = HbottomPanel;
obj.BottomPanel.Hprev = Hprev;
obj.BottomPanel.Hnext = Hnext;


createRightPanel;
obj.HpanelTemplate = @createNewPanel;

obj.loadReactionSetWindow();
addPanel(ReactionLab.Util.PrIMeData.SpeciesDepot.SpeciesIdentity(obj),'SpeciesIdentity');
obj.CurrentPanelIndex = 1;
set(obj.CurrentPanel,'Visible','on');


   function HpanelTemplate = createNewPanel
      HpanelTemplate = uipanel('parent',Hfig,...
         'Visible','off',...
         'units','normalized',...
         'Position', [0 0.1 0.4 0.9]);
   end

    function createRightPanel
        HRightPanel = uipanel('parent',Hfig,...
           'units','normalized',...
           'Position', [0.4 0 0.6 1.0]);
        HtitleStr = {'Select Thermo File','Upload Species Dictionary'};
        Htitle2Str = {' ',' '};
        Htitle3Str = {'Prev/Next','Action Options'};
        Htitle4Str = {'','Converting from InChI to PrIMe IDs'};
        HbuttonStr = {'<html><u>Thermo File Requirements</u></html>','<html><u>Species File Requirements</u></html>'};
        HbuttonVis = {'off','on'};
        HPosition = {{[30 450 440 20],[50 380 420 70],[50 350 150 30],[30 315 440 20],[50 280 150 30],[30 310 440 20],[50 235 420 70],[30 125 440 20],[50 55 420 70]},...
                     {[30 450 440 20],[50 380 420 70],[50 340 150 30],[30 315 440 20],[250 340 150 30],[30 300 440 20],[50 230 420 70],[30 190 440 20],[50 10 420 180]}};
        HdescriptionStr = {'Pressing the button "Select thermo file" on the left panel uploads a thermodynamic data file typically used in Chemkin projects.  This file will be used to determine species chemical composition.   The requirements for the thermo file formatting can be viewed by pressing the button below.',...
            {'Pressing the button "Upload species dictionary" on the left panel uploads a species dictionary: a list of the species names and their corresponding IDs.  The requirements for the species dictionary format can be viewed by pressing the button "Species File Requirements" below.  A full example can also be downloaded by pressing the button "Species Dictionary Example" below.'}};
        Hdescription2Str = {'<html><u>Thermo File</u></html>',...
            {'<html><u>Species Dictionary Example</u></html>'}};
        Hdescription3Str = {'Once you have uploaded a thermo file or if you wish to skip uploading a thermo file press "Next" to begin identifying species.',...
            {'Remove: Delete the selected dictionaries from the list below.','Merge: Combine two or more selected dictionaries of the same ID type.','Edit: View the species dictionary, show information for an individual species, and','        export the dictionary to an excel file.','Convert: Create a species dictionary with PrIMe IDs from a dictionary using InChI IDs.'}};
        Hdescription4Str = {'',...
            {'To convert your own InChI species dictionary to a PrIMe ID species dictionary:','       1. Upload your own InChI species dictionary (as described above)','       2. Select the uploaded file and choose the "Convert" option under "Action"','','A "builupDictionary" file will be created with all definitive PrIMe ID matches.  After this initial step, you will have the following options:','       Verify: Confirm the match to add the species to the buildupDictionary.','       Check by Composition: Resolve a species by choosing the correct match, then','              pressing "Select displayed".  If no match is correct, add it to the new species.','       Submit to PrIMe: Submit new species to PrIMe by adding names, formulas,','              or IDs to identify the species.  Submit each species individually.'}};
        Hlink2Str = {'http://primekinetics.org/tutorials/therm.txt','http://primekinetics.org/tutorials/species_dictionary_inchi_id.xlsx'};
        Hfilename2Str = {'thermo.txt','species_dictionary_inchi_id.xlsx'};
        Htitle = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{1},...
           'String', HtitleStr{1},...
           'HorizontalAlignment','left',...
           'FontWeight', 'bold');
        Hdescription = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{2},...
           'HorizontalAlignment','left',...
           'String', HdescriptionStr{1});
        Hbutton = uicontrol('Parent',HRightPanel,...
           'Style', 'PushButton', ... 
           'Position', HPosition{1}{3},...
           'HorizontalAlignment','left',...
           'String', HbuttonStr{1},...
           'ForegroundColor',[0 0 1],...
           'Callback', @viewRequirements );
        Htitle2 = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{4},...
           'HorizontalAlignment','left',...
           'String', Htitle2Str{1},...
           'FontWeight', 'bold');
        Hdescription2 = uicontrol('Parent',HRightPanel,...
           'Style', 'PushButton', ... 
           'Position', HPosition{1}{5},...
           'Visible',HbuttonVis{1},...
           'HorizontalAlignment','left',...
           'String', Hdescription2Str{1},...
           'ForegroundColor',[0 0 1],...
           'Callback', @downloadFile );
        Htitle3 = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{6},...
           'HorizontalAlignment','left',...
           'String', Htitle3Str{1},...
           'FontWeight', 'bold');
        Hdescription3 = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{7},...
           'HorizontalAlignment','left',...
           'String', Hdescription3Str{1});
        Htitle4 = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{8},...
           'HorizontalAlignment','left',...
           'String', Htitle4Str{1},...
           'FontWeight', 'bold');
        Hdescription4 = uicontrol('Parent',HRightPanel,...
           'Style', 'text',...
           'Position', HPosition{1}{8},...
           'HorizontalAlignment','left',...
           'String', Hdescription4Str{1});
        obj.RightPanel.position = HPosition;
        obj.RightPanel.panel = HRightPanel;
        obj.RightPanel.title = Htitle;
        obj.RightPanel.description = Hdescription;
        obj.RightPanel.button = Hbutton;
        obj.RightPanel.title2 = Htitle2;
        obj.RightPanel.description2 = Hdescription2;
        obj.RightPanel.title3 = Htitle3;
        obj.RightPanel.description3 = Hdescription3;
        obj.RightPanel.title4 = Htitle4;
        obj.RightPanel.description4 = Hdescription4;
        obj.RightPanel.titleStr = HtitleStr;
        obj.RightPanel.descriptionStr = HdescriptionStr;
        obj.RightPanel.buttonStr = HbuttonStr;
        obj.RightPanel.buttonVis = HbuttonVis;
        obj.RightPanel.title2Str = Htitle2Str;
        obj.RightPanel.description2Str = Hdescription2Str;
        obj.RightPanel.title3Str = Htitle3Str;
        obj.RightPanel.description3Str = Hdescription3Str;
        obj.RightPanel.title4Str = Htitle4Str;
        obj.RightPanel.description4Str = Hdescription4Str;
        obj.RightPanel.link2Str = Hlink2Str;
        obj.RightPanel.filename2Str = Hfilename2Str;
    end

   function switchPanel(hh,dd,inc)
      set(obj.CurrentPanel,'Visible','off');
      obj.CurrentPanelIndex = obj.CurrentPanelIndex + inc;
      set([Hprev Hnext],'Enable','on');
      setRightPanel
      if obj.CurrentPanelIndex == 1
         set(Hprev,'Enable','off');
      end
      if obj.CurrentPanelIndex == length(obj.Panels)
         set(Hnext,'Enable','off');
      end
      set(obj.CurrentPanel,'Visible','on');
   end

   function setRightPanel()
       set(obj.RightPanel.title,'String',obj.RightPanel.titleStr{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{1})
       set(obj.RightPanel.description,'String',obj.RightPanel.descriptionStr{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{2})
       set(obj.RightPanel.button,'String',obj.RightPanel.buttonStr{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{3})
       set(obj.RightPanel.title2,'String',obj.RightPanel.title2Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{4})
       set(obj.RightPanel.description2,'String',obj.RightPanel.description2Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{5},'Visible',obj.RightPanel.buttonVis{obj.CurrentPanelIndex})
       set(obj.RightPanel.title3,'String',obj.RightPanel.title3Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{6})
       set(obj.RightPanel.description3,'String',obj.RightPanel.description3Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{7})
       set(obj.RightPanel.title4,'String',obj.RightPanel.title4Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{8})
       set(obj.RightPanel.description4,'String',obj.RightPanel.description4Str{obj.CurrentPanelIndex},'Position',obj.RightPanel.position{obj.CurrentPanelIndex}{9})
   end

   function addPanel(newObj,prop)
      obj.(prop) = newObj;
      obj.Panels = [obj.Panels {newObj}];
   end

   function downloadFile(hh,dd)
       [filename, pathname] = uiputfile(obj.RightPanel.filename2Str{obj.CurrentPanelIndex},'Choose Where to Save Example');
        if isequal(filename,0) || isequal(pathname,0)
        else
            savefileName=fullfile(pathname,filename)
            [filestr,status]=urlwrite(obj.RightPanel.link2Str{obj.CurrentPanelIndex},obj.RightPanel.filename2Str{obj.CurrentPanelIndex});
            storefileName=filestr;
            movefile(storefileName,savefileName,'f');
        end
   end

    function viewRequirements(hh,dd)
        requirementArray={{'1. The file should be a properly-formatted NASA 7-coefficient polynomial','    text file','2. Nasa polynomial coefficients must not contain spaces instead of plus','    signs  (i.e., use 0.25000000e+01 not 0.25000000e 01)','3. The first 18 characters of the first line of each species record','    must contain only the species name.'},...
            {'1. The file must be an excel file (.xls or .xlsx)','2. No column headers should be included','3. Column A should contain the species names and Column B','    the corresponding species IDs','4. The ID type can be either "InChi", "PrIMeID", or "comp"'}};
        msgbox(requirementArray{obj.CurrentPanelIndex},'File Requirements','help')
   end
   
end